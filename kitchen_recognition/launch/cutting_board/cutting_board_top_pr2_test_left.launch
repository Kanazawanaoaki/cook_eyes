<launch>
  
  
  <arg name="INPUT" value="/kinect_head/depth_registered/throttled/points" />

  <arg name="manager" default="rosbag_play_nodelet_manager" />
  <arg name="launch_nodelet_manager" default="true" />
  <arg name="loop" default="true" />
  <arg name="gui" default="false" />
  <arg name="loop_flag" value="--loop" if="$(arg loop)" />
  <arg name="loop_flag" value="" unless="$(arg loop)" />

  <arg name="RGB_CAMERA_INFO" value="/kinect_head/rgb/throttled/camera_info" />
  <arg name="RGB_IMAGE" value="/kinect_head/rgb/throttled/image_rect_color" />
  <arg name="QUAT_RGB_CAMERA_INFO" value="/kinect_head/rgb/quater/throttled/camera_info" />
  <arg name="QUAT_RGB_IMAGE" value="/kinect_head/rgb/quater/throttled/image_rect_color" />
  <arg name="DEPTH_CAMERA_INFO" value="/kinect_head/depth_registered/throttled/camera_info" />
  <arg name="DEPTH_IMAGE" value="/kinect_head/depth_registered/throttled/image_rect" />

  <!-- decompress -->
  <node name="rgb_decompress" pkg="image_transport" type="republish"
        args="compressed in:=$(arg RGB_IMAGE) out:=$(arg RGB_IMAGE)" />
  <node name="depth_decompress" pkg="image_transport" type="republish"
        args="compressedDepth in:=$(arg DEPTH_IMAGE) out:=$(arg DEPTH_IMAGE)" />
  <node pkg="nodelet" type="nodelet" name="point_cloud_xyzrgb"
        args="load depth_image_proc/point_cloud_xyzrgb $(arg manager)" output="screen" >
    <remap from="rgb/camera_info" to="$(arg RGB_CAMERA_INFO)" />
    <remap from="rgb/image_rect_color" to="$(arg RGB_IMAGE)" />
    <remap from="depth_registered/image_rect" to="$(arg DEPTH_IMAGE)" />
    <remap from="depth_registered/points" to="/kinect_head/depth_registered/throttled/points" />
    <rosparam>
      queue_size: 100
    </rosparam>
  </node>

  <!-- extract pointcloud around cuttinb board  -->
  <node name="attention_clipper"
        pkg="nodelet" type="nodelet"
        args="standalone jsk_pcl/AttentionClipper">
    <remap from="~input/points" to="$(arg INPUT)" />
    <rosparam>
      initial_pos: [0.7, -0.125, 0.8]
      initial_rot: [0, 0, 0]
      dimension_x: 0.25
      dimension_y: 0.25
      dimension_z: 0.5
      frame_id: base_link
    </rosparam>
  </node>

  <node name="extract_indices" pkg="nodelet" type="nodelet"
	  args="standalone jsk_pcl/ExtractIndices" output="screen">
      <remap from="~input" to="$(arg INPUT)" />
      <remap from="~indices" to="attention_clipper/output/point_indices" />
      <rosparam>
        keep_organized: true
      </rosparam>
  </node>
  
  <arg name="run_rviz" default="true" />
  <arg name="publish_objects_tf" default="true" />
  <arg name="launch_tracking" default="false" />
  <!-- <arg name="manager" default="pr2_tabletop_object_detector_nodelet_manager"/> -->
  <arg name="machine" default="localhost" />
  <arg name="load_machine" default="true" />
  
  <include file="$(find jsk_pcl_ros)/sample/tabletop_object_detector.launch">
    <arg name="input" value="/extract_indices/output" />
    <arg name="sensor_frame" value="/head_mount_kinect_rgb_optical_frame" />
    <arg name="manager" value="$(arg manager)" />
    <arg name="machine" value="$(arg machine)" />
    <arg name="launch_openni" value="false" />
    <arg name="launch_tracking" value="$(arg launch_tracking)" />
    <arg name="launch_rviz" value="false" />
    <arg name="publish_tf" value="$(arg publish_objects_tf)" />
  </include>

  <node if="$(arg run_rviz)"
        pkg="rviz" name="pr2_rviz" type="rviz"
        args="-d $(find jsk_2020_04_pr2_curry)/config/tabletop_pr2.rviz" />
  
</launch>
